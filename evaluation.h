#include"chess.h"
#include"PostionValue.h"
#define BASEVALUE_PAWN 10
#define BASEVALUE_BISHOP 20
#define BASEVALUE_ELEPHANT 20
#define BASEVALUE_HORSE 40
#define BASEVALUE_CAR 90
#define BASEVALUE_CANON 45
#define BASEVALUE_KING 10000
#define FLEXIBILTY_PAWN 15
#define FLEXIBILTY_BISHOP 1
#define FLEXIBILTY_ELEPHANT 1
#define FLEXIBILTY_CAR 12
#define FLEXIBILTY_HORSE 30
#define FLEXIBILTY_CANON 12
#define FLEXIBILTY_KING 20
typedef struct ReleatedNode		
{
	int xEPos;
	int yEPos;
	ReleatedNode* next;
}LReleatedNode, *LReleatedList;

const int BAO[10][9] =		
{
	0, 0, 0, 0, 0, 0, 0, 0, 0,
	90, 90, 110, 120, 120, 120, 110, 90, 90,
	90, 90, 110, 120, 120, 120, 110, 90, 90,
	70, 90, 110, 110, 110, 110, 110, 90, 70,
	70, 70, 70, 70, 70, 70, 70, 70, 70,
	0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0,
};
const int BA1[10][9] =		//红兵的基础知识的定义
{
	0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0,
	70, 70, 70, 70, 70, 70, 70, 70, 70,
	70, 90, 110, 110, 110, 110, 110, 90, 70,
	90, 90, 110, 120, 120, 120, 110, 90, 90,
	90, 90, 110, 120, 120, 120, 110, 90, 90,
	0, 0, 0, 0, 0, 0, 0, 0, 0,
};
const short base_value[48] =
{
    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
 BASEVALUE_KING,BSEVALUE_BISHOP,BSEVALUE_BISHOP, BASEVALUE_ELEPHANT, BASEVALUE_ELEPHANT, BASEVALUE_HORSE,BASEVALUE_HORSE,
 BASEVALUE_CAR, BASEVALUE_CAR, BASEVALUE_CANON, BASEVALUE_CANON, BASEVALUE_PAWN, BASEVALUE_PAWN, BASEVALUE_PAWN, BASEVALUE_PAWN, BASEVALUE_PAWN,
 BASEVALUE_KING,BSEVALUE_BISHOP,BSEVALUE_BISHOP, BASEVALUE_ELEPHANT, BASEVALUE_ELEPHANT, BASEVALUE_HORSE, BASEVALUE_HORSE,
 BASEVALUE_CAR, BASEVALUE_CAR, BASEVALUE_CANON, BASEVALUE_CANON, BASEVALUE_PAWN, BASEVALUE_PAWN, BASEVALUE_PAWN, BASEVALUE_PAWN, BASEVALUE_PAWN
};
const int m_FlexValue[15] =
{
	0, FLEXIBILTY_CAR, FLEXIBILTY_HORSE, FLEXIBILTY_CANON, FLEXIBILTY_ELEPHANT, FLEXIBILTY_BISHOP, FLEXIBILTY_PAWN, FLEXIBILTY_KING,
	FLEXIBILTY_CAR, FLEXIBILTY_HORSE, FLEXIBILTY_CANON, FLEXIBILTY_ELEPHANT, FLEXIBILTY_BISHOP, FLEXIBILTY_PAWN, FLEXIBILTY_KING
};
int evaluation(unsigned char currChessBoard[],,unsigned char chess_array[],bool is_red_turn);		//给一个棋盘评价
